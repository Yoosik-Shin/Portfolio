{
    "sourceFile": "my-portfolio/src/pages/Dropdown/DropContainer.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 6,
            "patches": [
                {
                    "date": 1756560837479,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1756560884643,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,10 @@\n import React from \"react\";\r\n import user from \"../../assets/img/user.png\";\r\n-import profile from \"../../img/profile.png\";\r\n-import home from \"../../img/home.png\";\r\n-import setting from \"../../img/settings.png\";\r\n-import logout from \"../../img/logout.png\";\r\n+import profile from \"../../assets/img/profile.png\";\r\n+import home from \"../../assets/img/home.png\";\r\n+import setting from \"../../assets/img/settings.png\";\r\n+import logout from \"../../assets/logout.png\";\r\n import * as M from \"./DropContainer.styled.js\";\r\n import DropdownItem from \"./DropdownItem.jsx\";\r\n import { useState, useRef, useEffect, useContext } from \"react\";\r\n import Cookies from \"js-cookie\";\r\n"
                },
                {
                    "date": 1756560896489,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n import user from \"../../assets/img/user.png\";\r\n import profile from \"../../assets/img/profile.png\";\r\n import home from \"../../assets/img/home.png\";\r\n import setting from \"../../assets/img/settings.png\";\r\n-import logout from \"../../assets/logout.png\";\r\n+import logout from \"../../assets/img/logout.png\";\r\n import * as M from \"./DropContainer.styled.js\";\r\n import DropdownItem from \"./DropdownItem.jsx\";\r\n import { useState, useRef, useEffect, useContext } from \"react\";\r\n import Cookies from \"js-cookie\";\r\n"
                },
                {
                    "date": 1756652210714,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,29 +69,51 @@\n   //   navigate('/header')\r\n   // }\r\n \r\n   return (\r\n-    // <LoginContext.Provider>\r\n-      <M.MenuContainer ref={menuRef}>\r\n-        <M.MenuTrigger onClick={opMenu}>\r\n-          <img src={user} alt=\"\"></img>\r\n-        </M.MenuTrigger>\r\n-        <M.DropdownMenu className={`${open ? \"active\" : \"inactive\"}`}>\r\n-          <h3>\r\n-            {getCookieNick}님\r\n-            <br />\r\n-            <span>환영합니다.</span>\r\n-          </h3>\r\n-          <div><LogoutTimer/></div>\r\n-          <ul>\r\n+    <div ref={menuRef} className=\"relative\">\r\n+      <div\r\n+        onClick={opMenu}\r\n+        className=\"absolute top-2 left-2 w-20 h-20 overflow-hidden cursor-pointer\"\r\n+      >\r\n+        <img src={user} alt=\"\" className=\"rounded-full w-full h-full\" />\r\n+      </div>\r\n+      <div\r\n+        className={`absolute top-24 left-5 bg-white rounded-lg p-2 w-52 shadow-lg\r\n+                     transition-all duration-300\r\n+                     ${open ? \"opacity-100 visible translate-y-0\" : \"opacity-0 invisible -translate-y-5\"}`}\r\n+      >\r\n+        {/* 위쪽 뾰족한 부분 */}\r\n+        <div\r\n+          className=\"absolute -top-2 left-5 w-5 h-5 bg-gray-200\"\r\n+          style={{ transform: \"rotate(45deg)\" }}\r\n+        ></div>\r\n+        <h3 className=\"w-full text-center text-lg py-5 font-semibold text-gray-900 leading-5\">\r\n+          {getCookieNick}님\r\n+          <br />\r\n+          <span className=\"text-sm text-gray-500 font-normal\">환영합니다.</span>\r\n+        </h3>\r\n+        <div className=\"flex justify-center items-center text-xl\">\r\n+          <LogoutTimer />\r\n+        </div>\r\n+        <ul>\r\n+          <li className=\"flex items-center mt-2 pt-2 border-t border-black/5 hover:bg-gray-50 transition\">\r\n             <DropdownItem to=\"/header\" img={home} text={\"Home\"} />\r\n+          </li>\r\n+          <li className=\"flex items-center mt-2 pt-2 border-t border-black/5 hover:bg-gray-50 transition\">\r\n             <DropdownItem img={profile} text={\"Profile\"} />\r\n+          </li>\r\n+          <li className=\"flex items-center mt-2 pt-2 border-t border-black/5 hover:bg-gray-50 transition\">\r\n             <DropdownItem img={setting} text={\"Settings\"} />\r\n+          </li>\r\n+          <li\r\n+            className=\"flex items-center mt-2 pt-2 border-t border-black/5 hover:bg-gray-50 transition\"\r\n+          >\r\n             <DropdownItem img={logout} text={\"Logout\"} onClick={loggedOut.loggedOut} />\r\n-          </ul>\r\n-        </M.DropdownMenu>\r\n-      </M.MenuContainer>\r\n-    // </LoginContext.Provider>\r\n+          </li>\r\n+        </ul>\r\n+      </div>\r\n+    </div>\r\n   );\r\n };\r\n \r\n // 메뉴 외부클릭시 메뉴닫힘 연습\r\n"
                },
                {
                    "date": 1756652334271,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,51 +69,29 @@\n   //   navigate('/header')\r\n   // }\r\n \r\n   return (\r\n-    <div ref={menuRef} className=\"relative\">\r\n-      <div\r\n-        onClick={opMenu}\r\n-        className=\"absolute top-2 left-2 w-20 h-20 overflow-hidden cursor-pointer\"\r\n-      >\r\n-        <img src={user} alt=\"\" className=\"rounded-full w-full h-full\" />\r\n-      </div>\r\n-      <div\r\n-        className={`absolute top-24 left-5 bg-white rounded-lg p-2 w-52 shadow-lg\r\n-                     transition-all duration-300\r\n-                     ${open ? \"opacity-100 visible translate-y-0\" : \"opacity-0 invisible -translate-y-5\"}`}\r\n-      >\r\n-        {/* 위쪽 뾰족한 부분 */}\r\n-        <div\r\n-          className=\"absolute -top-2 left-5 w-5 h-5 bg-gray-200\"\r\n-          style={{ transform: \"rotate(45deg)\" }}\r\n-        ></div>\r\n-        <h3 className=\"w-full text-center text-lg py-5 font-semibold text-gray-900 leading-5\">\r\n-          {getCookieNick}님\r\n-          <br />\r\n-          <span className=\"text-sm text-gray-500 font-normal\">환영합니다.</span>\r\n-        </h3>\r\n-        <div className=\"flex justify-center items-center text-xl\">\r\n-          <LogoutTimer />\r\n-        </div>\r\n-        <ul>\r\n-          <li className=\"flex items-center mt-2 pt-2 border-t border-black/5 hover:bg-gray-50 transition\">\r\n+    // <LoginContext.Provider>\r\n+      <M.MenuContainer ref={menuRef}>\r\n+        <M.MenuTrigger onClick={opMenu}>\r\n+          <img src={user} alt=\"\"></img>\r\n+        </M.MenuTrigger>\r\n+        <M.DropdownMenu className={`${open ? \"active\" : \"inactive\"}`}>\r\n+          <h3>\r\n+            {getCookieNick}님\r\n+            <br />\r\n+            <span>환영합니다.</span>\r\n+          </h3>\r\n+          <div><LogoutTimer/></div>\r\n+          <ul>\r\n             <DropdownItem to=\"/header\" img={home} text={\"Home\"} />\r\n-          </li>\r\n-          <li className=\"flex items-center mt-2 pt-2 border-t border-black/5 hover:bg-gray-50 transition\">\r\n             <DropdownItem img={profile} text={\"Profile\"} />\r\n-          </li>\r\n-          <li className=\"flex items-center mt-2 pt-2 border-t border-black/5 hover:bg-gray-50 transition\">\r\n             <DropdownItem img={setting} text={\"Settings\"} />\r\n-          </li>\r\n-          <li\r\n-            className=\"flex items-center mt-2 pt-2 border-t border-black/5 hover:bg-gray-50 transition\"\r\n-          >\r\n             <DropdownItem img={logout} text={\"Logout\"} onClick={loggedOut.loggedOut} />\r\n-          </li>\r\n-        </ul>\r\n-      </div>\r\n-    </div>\r\n+          </ul>\r\n+        </M.DropdownMenu>\r\n+      </M.MenuContainer>\r\n+    // </LoginContext.Provider>\r\n   );\r\n };\r\n \r\n // 메뉴 외부클릭시 메뉴닫힘 연습\r\n"
                },
                {
                    "date": 1756652373813,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,9 +70,9 @@\n   // }\r\n \r\n   return (\r\n     // <LoginContext.Provider>\r\n-      <M.MenuContainer ref={menuRef}>\r\n+      <M.MenuContainer ref={menuRef} className=\"bg-amber-400\">\r\n         <M.MenuTrigger onClick={opMenu}>\r\n           <img src={user} alt=\"\"></img>\r\n         </M.MenuTrigger>\r\n         <M.DropdownMenu className={`${open ? \"active\" : \"inactive\"}`}>\r\n"
                },
                {
                    "date": 1756652381745,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,9 +70,9 @@\n   // }\r\n \r\n   return (\r\n     // <LoginContext.Provider>\r\n-      <M.MenuContainer ref={menuRef} className=\"bg-amber-400\">\r\n+      <M.MenuContainer ref={menuRef}>\r\n         <M.MenuTrigger onClick={opMenu}>\r\n           <img src={user} alt=\"\"></img>\r\n         </M.MenuTrigger>\r\n         <M.DropdownMenu className={`${open ? \"active\" : \"inactive\"}`}>\r\n"
                }
            ],
            "date": 1756560837479,
            "name": "Commit-0",
            "content": "import React from \"react\";\r\nimport user from \"../../assets/img/user.png\";\r\nimport profile from \"../../img/profile.png\";\r\nimport home from \"../../img/home.png\";\r\nimport setting from \"../../img/settings.png\";\r\nimport logout from \"../../img/logout.png\";\r\nimport * as M from \"./DropContainer.styled.js\";\r\nimport DropdownItem from \"./DropdownItem.jsx\";\r\nimport { useState, useRef, useEffect, useContext } from \"react\";\r\nimport Cookies from \"js-cookie\";\r\nimport LoginContextProvider, { LoginContext } from \"../Login/LoginContextProvider.jsx\";\r\nimport { LogoutTimer } from \"../Login/LogoutTimer.jsx\";\r\n\r\nexport const DropContainer = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const menuRef = useRef();\r\n\r\n  const loggedOut = useContext(LoginContext);\r\n  const opMenu = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  //메뉴 외부 클릭시 메뉴 닫힘\r\n  useEffect(() => {\r\n    let handler = (e) => {\r\n      if (!menuRef.current.contains(e.target)) {\r\n        setOpen(false);\r\n      }\r\n    };\r\n    document.addEventListener(\"mousedown\", handler);\r\n\r\n    //왜??????????????????\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handler);\r\n    };\r\n  });\r\n\r\n  const getCookieNick = Cookies.get(\"user\");\r\n\r\n  const getExpireHours = new Date(localStorage.getItem('user')).toString()\r\n  console.log(getExpireHours)\r\n\r\n  // const getExpire = (key) => {\r\n  //   const getLocalExpire = localStorage.getItem(key)\r\n  //   return getLocalExpire ? new Date(getLocalExpire) : null;\r\n  // }\r\n  // console.log(getExpire('user'))\r\n\r\n\r\n  // const parseLocalExpire = JSON.parse(getLocalExpire).expireTime\r\n  // const countdownTime = new Date(JSON.parse(getLocalExpire).expireTime).getTime('00:00:00');\r\n  // console.log(countdownTime)\r\n  // const distance = countdownTime - new Date().getHours()\r\n  // console.log(distance)\r\n\r\n  // {useLogoutTimer.timerDays}\r\n  // const getLocalItem = localStorage.getItem(key)\r\n  // const getCookieTimeOut = Cookies.get()\r\n\r\n  // const Logout = () => {\r\n  //   Cookies.remove(\"loginState\");\r\n  //   Cookies.remove(\"user\");\r\n  //   localStorage.removeItem('');\r\n  //   window.location.reload()\r\n  // }\r\n\r\n  // const MoveHome = () => {\r\n  //   const navigate = useNavigate()\r\n  //   navigate('/header')\r\n  // }\r\n\r\n  return (\r\n    // <LoginContext.Provider>\r\n      <M.MenuContainer ref={menuRef}>\r\n        <M.MenuTrigger onClick={opMenu}>\r\n          <img src={user} alt=\"\"></img>\r\n        </M.MenuTrigger>\r\n        <M.DropdownMenu className={`${open ? \"active\" : \"inactive\"}`}>\r\n          <h3>\r\n            {getCookieNick}님\r\n            <br />\r\n            <span>환영합니다.</span>\r\n          </h3>\r\n          <div><LogoutTimer/></div>\r\n          <ul>\r\n            <DropdownItem to=\"/header\" img={home} text={\"Home\"} />\r\n            <DropdownItem img={profile} text={\"Profile\"} />\r\n            <DropdownItem img={setting} text={\"Settings\"} />\r\n            <DropdownItem img={logout} text={\"Logout\"} onClick={loggedOut.loggedOut} />\r\n          </ul>\r\n        </M.DropdownMenu>\r\n      </M.MenuContainer>\r\n    // </LoginContext.Provider>\r\n  );\r\n};\r\n\r\n// 메뉴 외부클릭시 메뉴닫힘 연습\r\n// const menuRef = useRef();\r\n//   const triggerRef = useRef();\r\n\r\n//   const opMenu = () => {\r\n//     setOpen(!open);\r\n//   };\r\n\r\n//     window.addEventListener(\"click\", (e) => {\r\n//       if (e.target !== (menuRef.current && triggerRef.current)) {\r\n//         setOpen(false);\r\n//         console.log(menuRef.current);\r\n//       }\r\n//     });\r\n"
        }
    ]
}